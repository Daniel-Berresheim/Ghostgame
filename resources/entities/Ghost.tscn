[gd_scene load_steps=5 format=2]

[ext_resource path="res://resources/textures/entities/Ghost.png" type="Texture" id=1]

[sub_resource type="GDScript" id=4]

script/source = "extends KinematicBody2D

const DEADZONE = 0.25;
const MOVEMENT_DEADZONE = 30;

enum State {
	STATE_IDLE,
	STATE_POSSESSING
}

export(float) var movement_speed = 1200;
export(float) var friction = 0.0001;
var state = STATE_IDLE setget set_state;

onready var _position = position;
var _speed = Vector2(0, 0);

# Sets the state of the player.
func set_state(value):
	if value == STATE_POSSESSING:
		$\"Sprite\".visible = false;
		# Divide by length instead of setting to Vector2(0, 0).
		# This keeps the sign of speed (e.g. for sprite orientation).
		_speed /= _speed.length();
	elif value == STATE_IDLE:
		$\"Sprite\".visible = true;
	
	state = value;

func _ready():
	$\"AnimationPlayer\".play(\"Idle\");

func _process(delta):
	if state == STATE_IDLE:
		var analog = _deadzone(Vector2(Input.get_joy_axis(0, JOY_AXIS_0), Input.get_joy_axis(0, JOY_AXIS_1)));
		if analog != Vector2(0, 0):
			_speed += analog * movement_speed * delta;
		else:
			var dir = Vector2(0, 0);
			dir.x += int(Input.is_action_pressed(\"move_right\")) - int(Input.is_action_pressed(\"move_left\"));
			dir.y += int(Input.is_action_pressed(\"move_down\")) - int(Input.is_action_pressed(\"move_up\"));
			_speed += dir.normalized() * movement_speed * delta;
		
		$\"Sprite\".flip_h = _speed.x > 0;
		
		_position += move_and_slide(_limit_movement(_speed)) * delta;
		_speed *= pow(friction, delta);
		
		position = Vector2(round(_position.x), round(_position.y));

func _limit_movement(axis):
	if abs(axis.x) < MOVEMENT_DEADZONE:
		axis.x = 0;
	if abs(axis.y) < MOVEMENT_DEADZONE:
		axis.y = 0;
	
	return axis;

func _deadzone(axis):
	var length = axis.length();
	
	if length < DEADZONE:
		return Vector2(0, 0);
	if length > 1:
		return axis.normalized();
	
	return axis;"

[sub_resource type="CircleShape2D" id=2]

custom_solver_bias = 0.0
radius = 5.32587

[sub_resource type="Animation" id=3]

resource_name = "Idle"
length = 1.0
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 0
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.5, 0.65, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -1 ), Vector2( 0, 0 ), Vector2( 0, 1 ), Vector2( 0, 0 ) ]
}

[node name="Ghost" type="KinematicBody2D"]

input_pickable = true
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.08
script = SubResource( 4 )
_sections_unfolded = [ "Collision" ]
movement_speed = 1200
friction = 0.0001

[node name="CollisionShape" type="CollisionShape2D" parent="." index="0"]

shape = SubResource( 2 )

[node name="Ghost" type="Area2D" parent="." index="1"]

editor/display_folded = true
input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"

[node name="CollisionShape2" type="CollisionShape2D" parent="Ghost" index="0"]

shape = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="." index="2"]

z_index = 1
texture = ExtResource( 1 )
_sections_unfolded = [ "Transform", "Z Index" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="." index="3"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.5
anims/Idle = SubResource( 3 )
blend_times = [  ]
_sections_unfolded = [ "Playback Options" ]


