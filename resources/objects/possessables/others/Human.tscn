[gd_scene load_steps=9 format=2]

[ext_resource path="res://resources/objects/basic/Possessable.tscn" type="PackedScene" id=1]
[ext_resource path="res://resources/textures/objects/possessables/others/Boy.png" type="Texture" id=2]
[ext_resource path="res://resources/textures/lights/Sphere.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody2D

# todo:
# - can jump (1.5 blocks horizontaly and vertically)
# - no controll while jumping? (no direction change in midair)
# - no snapping while falling, normal movement calculation
# - sounds
# - dies if movables fall on it
# - dying: the player falls over with an animation and sound; the screen fades out and the level resets
# - some humans have other abilities, which are shown on the sprite; e.g. cannot be possessed

# todo (later):
# - will be scared of some actions of the player and from movables
# - can run away in fear
# - maybe they have a value of how likely they are to be afraid
# - this value can be raised if it's dark, etc. and through events
# - adults could have a higher resistance to scary things

# Deadzone of controller axis.
const DEADZONE = 0.25

var alive = true

# gravity applied on the character
export var gravity = Vector2(0, 2000)

# The speed of the human will be multiplied by this value in the span of one second.
export(float) var friction = 0.00005

# Movement speed in pixels per second.
export(float) var movement_speed = 1400

# Jump strength
export(float) var jump_strength = 16000

# The current speed of the human.
var speed = Vector2(0.0, 0.0)

# Movement that actually occured since the last _physics_process.
var actual_movement = Vector2()

# True if colliding with ground.
var on_ground = true

var fall_position = 0

var was_walking = false

onready var _p = $\"Possessable\"
onready var _animation = get_node(\"AnimationPlayer\")

func _ready():
	
	_animation.play(\"Idle\")
	
	pass

func _physics_process(delta):
	
	# tests, whether the player is on ground
	var on_ground_new = test_move(global_transform, Vector2(0, 1))
	
	var walking = false
	
	if on_ground_new:
		
		if !on_ground:
			
			# hit the ground
			# play sound, etc.
			
			emit_signal(\"impact\", speed.x)
			
			# human dies, if fallheight is over 2.5 blocks (40 pixel)
			var fall_height = -(fall_position - global_position.y)
			
			if fall_height > 40:
				# die
				print(\"Human died\")
				alive = false
		
		if _p.possessed and alive:
			# jump
			if Input.is_action_just_pressed(\"move_up\"):
				
				speed.y -= jump_strength * delta
				
				pass
		
		# if on ground and possessed, calculate input direction and speed
		if _p.possessed and alive:
			var analog = _deadzone(Vector2(Input.get_joy_axis(0, JOY_AXIS_0), 0))
			if analog != Vector2():
				speed += analog * movement_speed * delta
				walking = true
			else:
				if Input.is_action_pressed(\"move_right\") or Input.is_action_pressed(\"move_left\"):
					var dir = Vector2()
					dir.x += int(Input.is_action_pressed(\"move_right\")) - int(Input.is_action_pressed(\"move_left\"))
					speed += dir.normalized() * movement_speed * delta
					walking = true
			
	# animation
	if walking and !was_walking: _animation.play(\"Walking\")
	elif !walking and was_walking: _animation.play(\"Idle\")
		
	was_walking = walking
		
	# looking direction
	if speed.x < 0: $\"Sprite\".flip_h = false
	elif speed.x > 0: $\"Sprite\".flip_h = true
		
	if on_ground:
		
		if !on_ground_new:
			
			# start falling
			# mark position as start point for falling
			fall_position = global_position.y
		
	else:
		
		speed += gravity * delta
		
	if on_ground_new:
		
		speed *= pow(friction, delta)	
	
	on_ground = on_ground_new
	
	actual_movement = global_position
	move_and_slide(speed, Vector2(0, -1))
	actual_movement = (actual_movement - global_position) / delta
	
	# moves the player along with the human
	if _p.possessed: _p.player.global_position = global_position

func _deadzone(axis):
	var length = axis.length()
	
	if length < DEADZONE:
		return Vector2()
	if length > 1:
		return axis.normalized()
	
	return axis"

[sub_resource type="CircleShape2D" id=2]

custom_solver_bias = 0.0
radius = 14.0

[sub_resource type="CapsuleShape2D" id=3]

custom_solver_bias = 0.0
radius = 6.84571
height = 10.5188

[sub_resource type="Animation" id=4]

resource_name = "Idle"
length = 1.0
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=5]

resource_name = "Walking"
length = 0.8
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}

[node name="Human" type="KinematicBody2D" index="0"]

z_index = 7
input_pickable = false
collision_layer = 8
collision_mask = 11
collision/safe_margin = 0.08
script = SubResource( 1 )
_sections_unfolded = [ "Collision", "Z Index" ]
gravity = Vector2( 0, 2000 )
friction = 5e-005
movement_speed = 1400
jump_strength = 16000

[node name="Possessable" parent="." index="0" instance=ExtResource( 1 )]

[node name="PossessArea" type="CollisionShape2D" parent="Possessable" index="2"]

position = Vector2( -1, -1 )
shape = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="." index="1"]

texture = ExtResource( 2 )
hframes = 8
frame = 7
_sections_unfolded = [ "Animation" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="2"]

position = Vector2( 0, 3 )
shape = SubResource( 3 )
_sections_unfolded = [ "Transform" ]

[node name="Light2D" type="Light2D" parent="." index="3"]

enabled = true
editor_only = false
texture = ExtResource( 3 )
offset = Vector2( 0, 0 )
texture_scale = 1.0
color = Color( 1, 1, 1, 1 )
energy = 0.6
mode = 0
range_height = 0.0
range_z_min = -1024
range_z_max = 1024
range_layer_min = 0
range_layer_max = 0
range_item_cull_mask = 1
shadow_enabled = false
shadow_color = Color( 0, 0, 0, 0 )
shadow_buffer_size = 2048
shadow_gradient_length = 0.0
shadow_filter = 0
shadow_filter_smooth = 0.0
shadow_item_cull_mask = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="." index="4"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/Idle = SubResource( 4 )
anims/Walking = SubResource( 5 )
blend_times = [  ]


